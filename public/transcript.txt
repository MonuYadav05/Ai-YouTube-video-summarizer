it seems like every developer in the world is getting down with mCP right now model context protocol is the hot new way to build apis and if you don't know what that is you're ngmi people are doing crazy things with it like this guy got clawed to design 3d art and blender powered entirely on Vibes and just a few days ago it became an official standard in the open AI agents SDK if you're an OG subscriber to this channel you probably know what a rest API is you might even know about graphql or RPC or maybe many years ago you use soap when I was a kid the software engineering Gatekeepers told me I couldn't be a web developer unless I could explain the difference between these architectures and protocols well now the turns have tabled and these Gatekeepers have been utterly demolished because we're all just Vibe coders now embracing the exponentials pretending code doesn't even exist and just chilling with llms until we get the end result we're looking for that being said you can't call yourself a true vibe coder unless you know about model context protocol which is basically a new standard for building apis that you can think of like a USBC port for AI application it was designed by anthropic the team behind Claud and provides a standard way to give large language models context and they're so bullish on this technology that the CEO of anthropic said he expects virtually all code to be written by AI by the end of the year in today's video we'll actually build an mCP server and find out if it can truly make the world a better place by eliminating all white collar jobs it is March 31st 2025 and you're watching the code report contrary to popular belief a Fire Ship is still a tutorial channel in today's video we'll take a storage bucket a postgress database and a regular rest API and then connect them all together with the model context protocol not only will this allow Claude to have access to data it didn't have before but it can also execute code on our server like write to the database or upload files and people of the internet are already using it to do crazy stuff like automated ston and shitcoin trading industrial scale web scraping and as a tool to manage Cloud infrastructure like your kubernetes cluster speaking of which to build our own mCP server we'll need some Cloud infrastructure and one of the best places to do that is savola which itself is powered by Google kubernetes engine and cloudflare under the hood they were nice enough to sponsor this video but the reason I like their platform so much is that it's far easier to use than something like AWS but provides linear predictable pricing unlike most of the application and database hosting startups out there and it's free to get started which makes it perfect for this project now like other API architectures mCP has a client in a server the client in our case will be claw desktop then will'll develop a server that maintains a connection with that client so the client and server can pass information back and forth via the transport layer now in arrest API you have a bunch of different HTTP verbs that you can send requests to Via different URLs but in the model context protocol we're really only concerned with two main things resources and tools a resource might be a file a database query or some other information the model can use for context conceptually you can think of it like a git request and rest meanwhile a tool is an action that can be performed like writing something to a database so that'd be more like a poster request and rest what we do as developers is Define tools and resources on the server is so the llm can automatically identify and use them when they have a prompt that needs them in my life I've been working on an app I consider my magnum opus called horse tender but as it turns out swiping left and right was a bad feature idea because horses don't have fingers so like every other failing startup in Silicon Valley right now we're going to Pivot to artificial intelligence luckily we can leverage our existing data and servers like here in savola I have a storage bucket and it contains all of the photos that my users uploaded in addition for user data we have a postgress database it has all the profile data for each one of our horses as well as the relationships they form together and then finally I have a traditional rest API written in typescript that fetches this data for my web IOS and Android apps and what's especially cool about my code is that it's in a git repo hooked up to a cicd pipeline that means after we write our model context protocol server we can push our code to the dev or staging branches to test it before it actually goes into production while automatically handles all the deployments and cash busting for us automatically and now we're ready to jump into some code here I have a dino project and the first thing you'll notice is that I'm importing a class called mCP server this comes from the official SDK but if you're not using typescript they have a bunch of other languages like python Java and so on we'll also be using Zod here which is a tool used for schema validation which allows us to provide a specific data shape to the llm is so it doesn't just hallucinate a bunch of random crap now after we create a server we can start adding resources to it the resource will first have a name like horses looking for love and then the second argument is a URI for the resource then finally the third argument is a callback function that we can use to fetch the data in this example I'm writing a query to our postgress database which is hosted in the cloud on savola then accessed on the server with the postgress JS library but you could access any data here when something is a resource though it should only be used for fetching data where there's no side effects or computations if you do have a side effect or computation you should instead use a tool like for horse tender we might want the AI to automatically create matches and set up dates between horses we already have a restful API endpoint that can handle that and we could actually leverage that code here essentially creating an API for our API in fact many of these mCP servers are actually just apis for apis and that sounds like dumb over engineering but having a protocol like this makes it a lot easier to Plug and Play between different models and just makes llm apps more reliable in general the case in point notice how I'm using Zod here to validate the shape of the data going into this function that prevents the llm from hallucinating random stuff here basically when you prompt Claud it's going to need to figure out the proper arguments to this function is so providing data types along with a description will make your mCP server far more reliable and then the final step is to run the server in this case I'm going to use standard IO as the transport layer to use it locally but if deploy to the cloud you can also use server sent events or HTTP congratulations you just built an mCP server but now the question is how do we Act actually use it to use it you'll now need a client that supports the model context protocol like Claude desktop there are many other mCP clients out there if you don't want to use CLA desktop like cursor and wisor for example and you could even develop your own client but that's an entirely separate topic altogether once installed you can go to the developer settings which will bring you to a config file where you can add multiple mCP servers in the config file all you have to do is provide a command to run the actual server which in our case would be the doo command for the main.ts file where we find our server code you'll need to restart clad but then it should show your mCP server is running in this case my horse is running which means I should probably go and catch it then you can go back to the prompt screen to attach it that's going to fetch the resource from the server so CLA can use it as context in the next prompt and because clae is multimodal you could also add PDFs images or anything else to the context really like all the horse images in our Savala storage bucket and now magically you can prompt Claude about things specific to your application like if we want to find out which horses are single and ready to mingle we can make a prompt like this and it will use the context that we just fetched from our database then if we want Claude to write to the database we could make a prompt like this where it'll connect two horses from the context on a date you'll need to Grant a permission to do this and then Claude will automatically figure out which data to send it but based on the schema we validated with Zod and it'll use our server tool to mutate data in the actual application I can't imagine anything ever possibly going wrong here and anthropic is extremely bullish on this being the future like their CEO just said that 90% of coding will be done entirely by AI within the next 6 months and nearly all code will be AI generated within a year I'm going to go ahead and press X to doubt there and I think it's only a matter of time before some AI agent accidentally wipes out billions of dollars in customer data or becomes self-aware and just deletes the data for fun that being said though there's all kinds of amazing tools being built with mCP right now and you can check those out on the awesome mCP repo just please make sure to Vibe code responsibly huge thanks to Savala for making this video possible and enjoy this $50 stimulus check to try out their awesome platform this has been the code report thanks for watching and I will see you in the next one